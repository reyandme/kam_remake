function UnitsInZone(x1 : Integer; x2 : Integer; y1 : Integer; y2 : Integer; l : Integer) : Boolean;
var allUnits : array of Integer;
var i, count : Integer;
var taken : Boolean;
begin
	count := 0;
	taken := false;
	allUnits := States.PlayerGetAllUnits(0);
	for i := 0 to Length(allUnits) - 1 do
		begin
			if ((States.UnitPositionX(allUnits[i]) >= x1) and (States.UnitPositionX(allUnits[i]) <= x2) and (States.UnitPositionY(allUnits[i]) >= y1) and (States.UnitPositionY(allUnits[i]) <= y2)) then count := count + 1;
			if (count >= l) then 
				begin 
					taken := true;
					break;
				end;
		end;
	Result := taken;
end;

procedure CheckWin;
var text : AnsiString;
var zones : array [0..3] of Boolean;
begin
	
	if (UnitsInZone(45, 56, 33, 38, 10)) then zones[0] := true else zones[0] := false;
	if (UnitsInZone(1, 16, 33, 42, 10)) then zones[1] := true else zones[1] := false;
	if (UnitsInZone(1, 17, 7, 18, 10)) then zones[2] := true else zones[2] := false;
	if (UnitsInZone(33, 45, 1, 14, 10)) then zones[3] := true else zones[3] := false;
	
	text := '<$1> (SE):';
	if (zones[0] = true) then text := text + '<$2>' else text := text + '<$3>';
	text := text + '|<$4> (SW):';
	if (zones[1] = true) then text := text + '<$2>' else text := text + '<$3>';
	text := text + '|<$5> (NW):';
	if (zones[2] = true) then text := text + '<$2>' else text := text + '<$3>';
	text := text + '|<$6> (NE):';
	if (zones[3] = true) then text := text + '<$2>' else text := text + '<$3>';
	
	if ((zones[0] = true) and (zones[1] = true) and (zones[2] = true) and (zones[3] = true) and (States.StatArmyCount(1) = 0)) then Actions.PlayerWin([0], false);
	Actions.OverlayTextSet(0, text);
	
	if (States.StatArmyCount(0) < 40) then 
		begin Actions.PlayerDefeat(0); Actions.OverlayTextSet(0, '<$7>'); end;
end;

procedure OnTick;
begin
	if (States.GameTime = 600) then 
		begin 
			Actions.ShowMsg(0,'<$0>');
			Actions.FogRevealCircle(0, 11, 34, 5);
			Actions.FogRevealCircle(0, 6, 10, 5);
			Actions.FogRevealCircle(0, 44, 11, 5);
			Actions.FogRevealCircle(0, 50, 36, 5);
		end;
	if (States.GameTime > 600) then CheckWin;
end;

procedure OnMissionStart;
var g : array of Integer;
var i: Integer;
begin
	g := States.PlayerGetAllGroups(0);
	for i := 0 to Length(g) - 1 do
		Actions.GroupHungerSet(g[i], 16000);
end;